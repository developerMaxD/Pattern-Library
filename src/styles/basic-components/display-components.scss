// -------------------- Styles of component 'Label' <start> --------------------
.label {
    color: $fore-color;
    background-color: $back-color;
    &.default {
        text-shadow: 0px 0px 0px transparent;
    }
    &.shadow {
        text-shadow: 3px 3px 3px $gray-level-3;
    }
}
// -------------------- Styles of component 'Label' <end> --------------------

// -------------------- Styles of component 'Image' <start> --------------------
.image {
    display: inline-block;
    margin: 4px;
    background-color: $whitesmoke;
    padding: 2px;
    box-shadow: 0 0 6px $gray-level-2;
    -moz-box-shadow: 0 0 6px $gray-level-2;
    -webkit-box-shadow: 0 0 6px $gray-level-2;
    cursor: pointer;
    &.popup {
        > .thumbnail {
            max-height: 128px;
            max-width: 128px;
            -webkit-transition: all 0.3s ease;
            -moz-transition: all 0.3s ease;
            -o-transition: all 0.3s ease;
            -ms-transition: all 0.3s ease;
            transition: all 0.3s ease;
            &:hover {
                -webkit-filter: blur(3px);
            }
        }
        > .attachment {
            position: absolute;
            left: -99999px;
            background-color: $whitesmoke;
            padding: 4px;
            box-shadow: 0 0 6px $gray-level-2;
            -moz-box-shadow: 0 0 6px $gray-level-2;
            -webkit-box-shadow: 0 0 6px $gray-level-2;
            -webkit-transition: opacity 0.3s linear;
            -moz-transition: opacity 0.3s linear;
            -o-transition: opacity 0.3s linear;
            transition: opacity 0.3s linear;
            opacity:0;
            filter:alpha(opacity=0);
            > .content {
                max-height: 512px;
                max-width: 512px;
            }
        }
        &:hover .attachment {
            z-index: 2048;
            top: 0px;
            left: 130px;
            opacity:100;
            filter:alpha(opacity=100);
        }
    }
    &.overlay {
        > .thumbnail {
            max-height: 512px;
            max-width: 512px;
            display: block;
            width: 100%;
            height: auto;
        }
        > .attachment {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: $dimgray;
            opacity:0.75;
            overflow: hidden;
            width: 100%;
            height: 0;
            transition: .3s ease;
            > .content {
                position: absolute;
                margin: 4px;
                height: 95%;
                padding: 2px;
                overflow-x: hidden;
                overflow-y: auto;
                color: $whitesmoke;
                top: 50%;
                left: 0%;
                transform: translate(0%, -50%);
                -ms-transform: translate(0%, -50%);
            }
        }
        &:hover .attachment {
            height: 50%;
        }
    }
    &.disabled {
        > .thumbnail {
            max-height: 512px;
            max-width: 512px;
            display: block;
            width: 100%;
            height: auto;
            cursor: default;
            -webkit-filter: grayscale(100%);
        }
    }
}
// -------------------- Styles of component 'Image' <end> --------------------

// -------------------- Styles of component 'List' <start> --------------------
.list {
    color: $fore-color;
    background-color: $back-color;
    &.text-only {
        > .item {
            display: flex;
            flex-flow: row;
            max-height: 30px;
            width: 100%;
            white-space: nowrap;
            margin: 2px;
            border: 0px solid transparent;
            padding: 2px;
            &.selectable {
                @extend %border-base-none;
                cursor: pointer;
                &:hover {
                    @extend %border-base-focus;
                    color: $sky-base;
                    background-color: $focus-back-color;
                }
                &.selected {
                    color: $whitesmoke;
                    background-color: $selected-back-color;
                    border-color: $selected-back-color;
                    &:hover {
                        @extend %border-base-none;
                    }
                }
            }
            > .text {
                margin: 1px 2px;
            }
        }
    }
    &.name-value {
        > .item {
            display: flex;
            flex-flow: row;
            max-height: 30px;
            width: 100%;
            white-space: nowrap;
            margin: 2px;
            border: 0px solid transparent;
            padding: 2px;
            &.selectable {
                @extend %border-base-none;
                cursor: pointer;
                &:hover {
                    @extend %border-base-focus;
                    color: $sky-base;
                    background-color: $focus-back-color;
                    > .line {
                        > hr {
                            border-top: 2px dotted $sky-base;
                        }
                    }
                }
                &.selected {
                    color: $whitesmoke;
                    background-color: $selected-back-color;
                    border-color: $selected-back-color;
                    > .line {
                        > hr {
                            border-top: 2px dotted $whitesmoke;
                        }
                    }
                    &:hover {
                        @extend %border-base-none;
                    }
                }
            }
            > .bullet {
                margin: 1px 2px 1px 4px;
                > i {
                    position: relative;
                    transform: translate(0, -50%);
                    top: 50%;
                }
            }
            > .text {
                margin: 1px 2px;
            }
            > .line {
                height: 100%;
                width: 100%;
                margin: 0px 4px 0px 6px;
                > hr {
                    position: relative;
                    transform: translate(0, -50%);
                    top: 50%;
                    height: 0px;
                    border-top: 2px dotted $fore-color;
                    border-radius: 0px;
                }
            }
            > .value {
                margin: 1px 4px 1px 2px;
            }
        }
    }
}
// -------------------- Styles of component 'List' <end> --------------------

// -------------------- Styles of component 'Tree list' <start> --------------------
.tree-list {
    > .root {
        line-height: 1.3em;
        margin:0 0 0 .5em; /* indentation */
        cursor: pointer;
        > .text {
            display: inline-block;
            margin-left: 3px;
        }
    }
    > .tree, .tree ul {
        margin:0 0 0 1em; /* indentation */
        padding:0;
        list-style:none;
        color:$fore-color;
        position:relative;
        &:before {
            content:"";
            display:block;
            width:0;
            position:absolute;
            top:0;
            bottom:0;
            left:0;
            margin-left: -2px;
            border-left:1px dotted;
        }
    }
    > .tree ul {margin-left:.5em} /* (indentation/2) */
    > .tree li {
        margin:0;
        padding:0 1em; /* indentation + .5em */
        line-height:1.3em; /* default list item's `line-height` */
        position:relative;
        &:before {
            content:"";
            display:block;
            width:10px; /* same with indentation */
            height:0;
            border-top:1px dotted;
            position:absolute;
            top: 0.65em; /* (line-height/2) */
            left:0;
            margin-left: -2px;
        }
        &:last-child:before {
            background:white; /* same with body background */
            height:auto;
            top:0.7em; /* (line-height/2) */
            bottom:0;
        }
        > .icon {
            margin-right: 3px;
            cursor: pointer;
            &:hover {
                color: $sky-base;
            }
        }
        > .text {
            display: inline-block;
            border-radius: 4px;
            padding: 1px 3px;
            &.selectable {
                @extend %border-base-none;
                cursor: pointer;
                &:hover {
                    @extend %border-base-focus;
                    color: $sky-base;
                    background-color: $focus-back-color;
                }
            }
        }
    }
}
// -------------------- Styles of component 'Tree list' <end> --------------------

// -------------------- Styles of component 'Progress' <start> --------------------
@mixin progress-bar($facade: "circle", $bar-color: $blue-base) {
    @if $facade == "circle" {
        position: relative;
        width: 100%;
        height: 100%;
        display: inline-block;
        border-radius: 50%;
        background-color: $whitesmoke;
        &:before {
            position: absolute;
            left: 1.3rem;
            right: 1.3rem;
            top: 1.3rem;
            bottom: 1.3rem;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            border-radius: 50%;
            background-color: white;
            box-shadow: 1px 1px 2px $gray-level-1;
            content: attr(data-progress)'%';
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;
            -webkit-box-pack: center;
            -ms-flex-pack: center;
            justify-content: center;
            -webkit-transition: -webkit-transform 0.2s ease;
            transition: -webkit-transform 0.2s ease;
            transition: transform 0.2s ease;
            transition: transform 0.2s ease, -webkit-transform 0.2s ease;
        }
        &:after {
            height: 100%;
            width: 100%;
            display: inline-block;
            border-radius: 50%;
            background-color: $bar-color;
            box-shadow: 1px 1px 2px $gray-level-1 inset;
            content: '';
        }
        
        $step: 1;
        $loops: round(100 / $step);
        $increment: 360 / $loops;
        $half: round($loops / 2);
        @for $i from 0 through $loops {
            $mark: $i * $step;
            &[data-progress^="#{$mark}" ]:after {
                @if $i < $half {
                    $next-deg: 90deg + $increment * $i;
                    background-image: linear-gradient(90deg, $whitesmoke 50%, transparent 50%, transparent), linear-gradient($next-deg, $bar-color 50%, $whitesmoke 50%, $whitesmoke);
                } @else {
                    $next-deg: -90deg + $increment * ($i - $half);
                    background-image: linear-gradient($next-deg, $bar-color 50%, transparent 50%, transparent), linear-gradient(270deg, $bar-color 50%, $whitesmoke 50%, $whitesmoke);
                }
            }
        }
    } @else if $facade == "straight" {
        display: block;
        margin: 1px;
        border-top: 1px solid lighten($bar-color, 12%);
        border-left: 1px solid lighten($bar-color, 12%);
        border-radius: 6px;
        height: calc(100% - 3px);
        background-color: $bar-color;
        box-shadow: -1px -1px 1px darken($bar-color, 30%) inset;
        color: $whitesmoke;
        text-align: center;
        text-shadow: 0 2px 1px $bar-color, 2px 1px 0px $bar-color, -2px 0px 1px $bar-color, 0px -2px 1px $bar-color;
        &:before {
            padding: 0px 10px 0px 10px;
            content: attr(data-progress)'%';
        }
    }
}
.progress {
    &.circle {
        > .bar {
            &.red {
                @include progress-bar($facade: "circle", $bar-color: $red-base);
            }
            &.orange {
                @include progress-bar($facade: "circle", $bar-color: $orange-base);
            }
            &.green {
                @include progress-bar($facade: "circle", $bar-color: $green-base);
            }
            &.blue {
                @include progress-bar($facade: "circle", $bar-color: $blue-base);
            }
            &.violet {
                @include progress-bar($facade: "circle", $bar-color: $violet-base);
            }
            &.pink {
                @include progress-bar($facade: "circle", $bar-color: $pink-base);
            }
        }
    }
    &.straight {
        display: block;
        border-radius: 6px;
        background-color: $whitesmoke;
        box-shadow: 1px 1px 2px $gray-level-1 inset;
        > .bar {
            &.red {
                @include progress-bar($facade: "straight", $bar-color: $red-base);
            }
            &.orange {
                @include progress-bar($facade: "straight", $bar-color: $orange-base);
            }
            &.green {
                @include progress-bar($facade: "straight", $bar-color: $green-base);
            }
            &.blue {
                @include progress-bar($facade: "straight", $bar-color: $blue-base);
            }
            &.violet {
                @include progress-bar($facade: "straight", $bar-color: $violet-base);
            }
            &.pink {
                @include progress-bar($facade: "straight", $bar-color: $pink-base);
            }
        }
    }
}
// -------------------- Styles of component 'Progress' <end> --------------------