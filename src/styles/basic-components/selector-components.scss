// -------------------- Styles of element 'selector content' <start> --------------------
%selector-content {
    position: relative;
    height: 30px;
    line-height: 30px;
    margin-left: 8px;
    overflow-x: hidden;
    overflow-y: hidden;
    border-style: none;
    outline: none;
    background-color: transparent;
}
// -------------------- Styles of element 'selector content' <end> --------------------

// -------------------- Styles of component 'Combo selector' <start> --------------------
@mixin combo-box($status: "default") {
    $placeholderColor: transparent;
    $topOfListButton: 7px;
    $foreColor: $gray-level-4;
    $itemForeColor: $gray-level-2;
    $statusCursor: pointer;
    // ******************** Styles by status ********************
    @if $status == "default" {
        @extend %border-base-normal;
        $placeholderColor: $gray-level-1;
        $topOfListButton: 7px;
        $foreColor: $gray-level-4;
        $itemForeColor: $gray-level-2;
        $statusCursor: pointer;
    } @else if $status == "focus" {
        @extend %border-base-focus;
        $placeholderColor: transparent;
        $topOfListButton: 6px;
        $foreColor: $gray-level-4;
        $itemForeColor: $gray-level-2;
        $statusCursor: pointer;
    } @else if $status == "error" {
        @extend %border-base-error;
        $placeholderColor: lighten($red-base, 25%);
        $topOfListButton: 7px;
        $foreColor: $gray-level-4;
        $itemForeColor: $gray-level-2;
        $statusCursor: pointer;
    } @else {
        @extend %border-base-disabled;
        $placeholderColor: $disabled-color;
        $topOfListButton: 7px;
        $foreColor: $disabled-color;
        $itemForeColor: $disabled-color;
        $statusCursor: default;
    }
    // ******************** Styles by status ********************
    min-height: 24px;
    max-height: 30px;
    min-width: 50px;
    > .placeholder {
        @include placeholder($height: 30px, $color: $placeholderColor);
    }
    > .left-button {
        // Include from pebble components
        @include single-button($top: 7px, $color: $foreColor, $size: 1.2em, $side: left, $sideOffset: 7px, $cursor: $statusCursor);
    }
    > .content {
        @extend %selector-content;
        white-space: nowrap;
        > .single {
            @extend %border-base-none;
            display: inline;
            @if $status == "disabled" {
                color: $disabled-color;
            }
        }
        > .multi {
            @extend %border-base-normal;
            position: relative;
            display: inline;
            @if $status == "disabled" {
                border-color: $disabled-color;
                color: $disabled-color;
            }
            border-style: dashed;
            border-color: $gray-level-3;
            padding: 1px 4px 1px 18px;
            margin-left: 6px;
            font-size: 13.5px;
            cursor: $statusCursor;
            &:first-child {
                margin-left: 3px;
            }
            @if $status != "disabled" {
                &:hover {
                    color: $sky-base;
                    background-color: $focus-back-color;
                    border: 1px solid $sky-base;
                    box-shadow: 0 0 6px $aqua-base;
                }
            }
            > .remove {
                // Include from pebble components
                @include close-button($top: 2px, $color: $itemForeColor, $size: 1.0em, $offset: 3px, $side: left, $sideOffset: 1px, $cursor: $statusCursor);
                @if $status != "disabled" {
                    &:hover {
                        @include close-button($top: 2px, $color: $sky-base, $size: 1.0em, $offset: 3px, $side: left, $sideOffset: 1px);
                    }
                }
            }
        }
        > .searcher {
            @include input-element($color: $fore-color);
            position: relative;
            top: -1px;
            display: inline;
            width: 100px;
        }
    }
    > .right-button {
        // Include from pebble components
        @include single-button($top: 7px, $color: $foreColor, $size: 1.2em, $side: right, $sideOffset: 38px, $cursor: $statusCursor);
    }
    > .close-button {
        // Include from pebble components
        @include close-button($top: 7px, $color: $foreColor, $size: 1.2em, $offset: 4px, $side: right, $sideOffset: 24px, $cursor: $statusCursor);
    }
    > .list-button {
        // Include from pebble components
        @include single-button($top: $topOfListButton, $color: $foreColor, $size: 1.2em, $side: right, $sideOffset: 8px, $cursor: $statusCursor);
    }
}
.combo-box {
    input[type=text]::-ms-clear {
        display: none;
    }
    &.default {
        @include combo-box($status: "default");
    }
    &.focus {
        @include combo-box($status: "focus");
    }
    &.error {
        @include combo-box($status: "error");
    }
    &.disabled {
        @include combo-box($status: "disabled");
    }
}
.combo-list {
    @extend %border-base-focus;
    position: relative;
    min-height: 50px;
    max-height: 134px;
    min-width: 50px;
    top: 3px;
    overflow: hidden;
    > .options {
        position: relative;
        min-height: 48px;
        max-height: 130px;
        min-width: 48px;
        margin: 2px 2px 4px 2px;
        overflow-x: hidden;
        overflow-y: auto;
        > .option {
            left: 0px;
            height: 24px;
            line-height: 26px;
            padding-left: 10px;
            padding-right: 5px;
            border: 1px solid transparent;
            text-align: left;
            font-size: 12px;
            cursor: pointer;
            &:hover {
                color: $sky-base;
                background-color: $focus-back-color;
                border: 1px solid $sky-base;
                border-radius: 4px;
                box-shadow: 0 0 6px $aqua-base;
            }
        }
    }
}
// -------------------- Styles of component 'Combo selector' <end> --------------------

// -------------------- Common styles of component 'Radio selector' and 'Checkbox selector' <start> --------------------
@mixin box-item($facade: "button", $status: "default") {
    @if $facade == "button" {
        > .button {
            @if $status == "default" {
                @extend %border-base-none;
                cursor: pointer;
            } @else {
                @extend %border-base-disabled;
                color: $disabled-color;
                cursor: default;
            }
            position: relative;
            display: inline;
            padding: 1px 4px 3px 22px;
            border: 1px solid transparent;
            &.checked {
                @if $status == "default" {
                    color: $sky-base;
                    font-weight: bold;
                }
                > .checker {
                    @if $status == "default" {
                        // Include from pebble components
                        @include single-button($top: 4px, $color: $sky-base, $size: 1.0em, $side: left, $sideOffset: 4px, $cursor: pointer);
                    } @else {
                        @include single-button($top: 4px, $color: $disabled-color, $size: 1.0em, $side: left, $sideOffset: 4px, $cursor: default);
                    }
                }
            }
            &.unchecked {
                @if $status == "default" {
                    &:hover {
                        color: $sky-base;
                        background-color: $focus-back-color;
                        border: 1px solid $sky-base;
                        box-shadow: 0 0 6px $aqua-base;
                    }
                }
                > .checker {
                    @if $status == "default" {
                        // Include from pebble components
                        @include single-button($top: 4px, $color: $gray-level-2, $size: 1.0em, $side: left, $sideOffset: 4px, $cursor: pointer);
                        &:hover {
                            @include single-button($top: 4px, $color: $sky-base, $size: 1.0em, $side: left, $sideOffset: 4px, $cursor: pointer);
                        }
                    } @else {
                        // Include from pebble components
                        @include single-button($top: 4px, $color: $disabled-color, $size: 1.0em, $side: left, $sideOffset: 4px, $cursor: default);
                    }
                }
            }
        }
    } @else if $facade == "card" {
        @if $status == "default" {
            @extend %border-base-normal;
            cursor: pointer;
        } @else {
            @extend %border-base-disabled;
            color: $disabled-color;
            cursor: default;
        }
        position: relative;
        height: 50px;
        line-height: 50px;
        margin: 6px;
        border-radius: 8px;
        padding: 6px;
        text-align: center;
        &.checked {
            background: transparent;
            @if $status == "default" {
                color: $sky-base;
                font-weight: bold;
                border: 2px solid $sky-base;
                background: linear-gradient(-135deg, $sky-base 15px, transparent 0);
                > .checker {
                    // Include from pebble components
                    @include single-button($top: 1px, $color: $whitesmoke, $size: 0.7em, $side: right, $sideOffset: 1px, $cursor: pointer);
                }
            } @else {
                border: 2px solid $disabled-color;
                background: linear-gradient(-135deg, $disabled-color 15px, transparent 0);
                > .checker {
                    // Include from pebble components
                    @include single-button($top: 1px, $color: $whitesmoke, $size: 0.7em, $side: right, $sideOffset: 1px, $cursor: default);
                }
            }
        }
        &.unchecked {
            @if $status == "default" {
                border: 2px solid $gray-level-5;
                &:hover {
                    color: $sky-base;
                    background-color: $focus-back-color;
                    border: 2px solid $sky-base;
                    box-shadow: 0 0 6px $aqua-base;
                }
            } @else {
                border: 2px solid $disabled-color;
            }
        }
    }
}
@mixin box-selector() {
    position: absolute;
    top: 0px;
    left: 0px;
    overflow: hidden;
    width: 100%;
    height: 100%;
    min-width: 100px;
    min-height: 26px;
    padding: 2px;
    > .content {
        display: flex;
        display: -webkit-flex;
        flex-flow: row wrap;
        -webkit-flex-flow: row wrap;
        justify-content: flex-start;
        -webkit-justify-content: flex-start;
        align-items: flex-start;
        -webkit-align-items: flex-start;
        align-content: space-between;
        -webkit-align-content: space-between;
        width: 100%;
        margin: 2px auto;
        > .button-grid {
            height: 30px;
            line-height: 30px;
            &.default {
                @include box-item($facade: "button", $status: "default");
            }
            &.disabled {
                @include box-item($facade: "button", $status: "disabled");
            }
        }
        > .card {
            &.default {
                @include box-item($facade: "card", $status: "default");
            }
            &.disabled {
                @include box-item($facade: "card", $status: "disabled");
            }
        }
    }
}
// -------------------- Common styles of component 'Radio selector' and 'Checkbox selector' <end> --------------------

// -------------------- Styles of component 'Radio selector' <start> --------------------
.radio-box {
    @include box-selector();
}
// -------------------- Styles of component 'Radio selector' <end> --------------------

// -------------------- Styles of component 'Check box selector' <start> --------------------
.check-box {
    @include box-selector();
}
// -------------------- Styles of component 'Check box selector' <end> --------------------